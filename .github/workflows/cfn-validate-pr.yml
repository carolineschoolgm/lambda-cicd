name: Validate and Deploy CloudFormation on PR

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - 'cloudformation/**'
  pull_request_target:
    types: [closed]
    paths:
      - 'cloudformation/**'
permissions:
  contents: read
  pull-requests: write

jobs:
    validate:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v2
    
        - name: Validate CloudFormation template
          run: |
            aws cloudformation validate-template --template-body file://cloudformation/s3-bucket.yml
    
    deploy:
        runs-on: ubuntu-latest
        needs: validate
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        steps:
        - name: Checkout code
          uses: actions/checkout@v2
    
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
    
        - name: Deploy CloudFormation stack
          run: |
            aws cloudformation deploy --template-file cloudformation/s3-bucket.yml --stack-name my-stack --parameters Parameters=Environment,ParameterValue=test

        - name: Comment on PR
          uses: actions/github-script@v6
          with:  
             github-token: ${{ secrets.GITHUB_TOKEN }}
             script: |
                const prNumber = context.issue.number;
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  body: 'CloudFormation test stack has been deployed successfully!' **pr-test-stack-${{ github.event.pull_request.number }}**
                });

    cleanup-on-merge:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
        - name: Delete CloudFormation stack
          run: |
            aws cloudformation delete-stack --stack-name my-stack
            stack_name: test-stack-${{ github.event.pull_request.number }}