name: Deploy S3 bucket on PR

on:
  pull_request:
    branches:
      - main
    paths:
      - 'lambda/cloudformation/s3-bucket.yml'

jobs: 
  validate-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Validate CloudFormation
        run: |
          aws cloudformation validate-template --template-body file://lambda/cloudformation/s3-bucket.yml

      - name: Deploy your stack
        run: |
          stack_name="pr-test-stack-${{ github.event.pull_request.number }}"
          aws cloudformation create-stack --stack-name $stack_name --template-body file://lambda/cloudformation/s3-bucket.yml --parameters ParameterKey=Environment,ParameterValue=test
        
      - name: Debug context 
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log("Event name: ", context.eventName)
            console.log("Payload keys: ", Object.keys(context.payload));

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              if (context.payload.pull_request) {
                await github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `CloudFormation test stack deployed: Stack name: pr-test-stack-${context.payload.pull_request.number}`
                });
              } else {
                console.log('No PR found');
              }
            } catch (error) {
              console.log("GitHub comment error:", error.message);
            }