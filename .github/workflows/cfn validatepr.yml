name: Validate CloudFormation on PR

on:
  pull_request:
    branches:
      - main
    paths:
      - 'cloudformation/**'

permissions:
  pull-requests: write
  contents: read

jobs:
  validate-cfn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Validate CloudFormation
        run: |
          aws cloudformation validate-template --template-body file://cloudformation/s3-bucket.yml

      - name: Deploy your stack
        run: |
          stack_name="pr-test-stack-${{ github.event.pull_request.number }}"
          aws cloudformation create-stack --stack-name $stack_name --template-body file://cloudformation/s3-bucket.yml --parameters ParameterKey=Environment,ParameterValue=test

      - name: Comment on PR
        uses: actions/github-script@v6
        env:
          Github-token: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            cost github = require('@actions/github');
            const token = process.env.GITHUB_TOKEN;
            const octokit = github.getOctokit(token);
            const context = github.context;
            
            if (context.payload.pull_request) {
              await octokit.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: 'CloudFormation template is valid and stack is created successfully: pr-test-stack-${context.payload.pull_request.number}'
              });
            } else {
              console.log('No pull request found.');
            }
  cleanup-on-merge:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Delete Test Stack
        run: |
          stack_name="pr-test-stack-${{ github.event.pull_request.number }}"
          aws cloudformation delete-stack --stack-name $stack_name